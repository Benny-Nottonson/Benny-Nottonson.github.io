{
  "published": true,
  "title": "appLab Whitelist Proxy",
  "description": "A proxy server to bypass the sandbox restrictions of code.org's AppLab using image manipulation and Node.js",
  "date": "2023-05-30T00:00:00.000Z",
  "url": "https://github.com/benny-nottonson/applabWhitelistProxy",
  "repository": "benny-nottonson/applabWhitelistProxy",
  "body": {
    "raw": "\r\n`applabWhitelistProxy` is a Node.js-based proxy server designed to bypass the sandbox restrictions imposed by code.org's AppLab platform. This program allows users to execute code that would normally be blocked by the AppLab sandbox, enabling them to access additional functionalities and extend the capabilities of their projects.\r\n\r\nThe main concept behind `applabWhitelistProxy` involves intercepting requests made by the AppLab platform and modifying the responses to bypass the sandbox limitations. The proxy server leverages image manipulation techniques to embed executable code within innocuous-looking images. By manipulating the pixel data of these images, the server can inject additional code that will be executed by the browser running the AppLab environment.\r\n\r\nTo use `applabWhitelistProxy`, you need to run the Node.js server on a machine accessible from the AppLab environment. Once the server is up and running, you configure the AppLab platform to send its requests through the proxy. When the AppLab platform sends a request for an image, the proxy intercepts it, modifies the response by embedding the necessary additional code, and returns the modified image to the browser.\r\n\r\nBy breaking the sandbox restrictions of AppLab, `applabWhitelistProxy` opens up possibilities for executing code that would otherwise be prohibited. This allows users to experiment with advanced functionalities, interact with external APIs, or implement custom features not provided by the original platform.\r\n\r\nThe `applabWhitelistProxy` project is hosted on GitHub in the [benny-nottonson/applabWhitelistProxy](https://github.com/benny-nottonson/applabWhitelistProxy) repository. The repository contains the source code and detailed documentation to guide users in setting up and configuring the proxy server. The code is written in Node.js, and it utilizes image manipulation techniques to bypass the AppLab sandbox restrictions.\r\n\r\nPlease note that while `applabWhitelistProxy` provides a way to bypass the sandbox limitations, it is essential to use this tool responsibly and ethically. It is crucial to respect the terms and conditions of the platform you are using and not engage in any malicious activities.\r\n\r\nBy using `applabWhitelistProxy`, developers and educators can explore new possibilities within the AppLab environment, enhance their projects with advanced functionalities, and push the boundaries of what can be achieved using code.org's AppLab platform.",
    "code": "var Component=(()=>{var c=Object.create;var s=Object.defineProperty;var l=Object.getOwnPropertyDescriptor;var b=Object.getOwnPropertyNames;var u=Object.getPrototypeOf,m=Object.prototype.hasOwnProperty;var y=(t,e)=>()=>(e||t((e={exports:{}}).exports,e),e.exports),x=(t,e)=>{for(var n in e)s(t,n,{get:e[n],enumerable:!0})},r=(t,e,n,a)=>{if(e&&typeof e==\"object\"||typeof e==\"function\")for(let o of b(e))!m.call(t,o)&&o!==n&&s(t,o,{get:()=>e[o],enumerable:!(a=l(e,o))||a.enumerable});return t};var g=(t,e,n)=>(n=t!=null?c(u(t)):{},r(e||!t||!t.__esModule?s(n,\"default\",{value:t,enumerable:!0}):n,t)),f=t=>r(s({},\"__esModule\",{value:!0}),t);var d=y((P,p)=>{p.exports=_jsx_runtime});var A={};x(A,{default:()=>j,frontmatter:()=>v});var i=g(d()),v={title:\"appLab Whitelist Proxy\",description:\"A proxy server to bypass the sandbox restrictions of code.org's AppLab using image manipulation and Node.js\",date:\"2023-05-30\",url:\"https://github.com/benny-nottonson/applabWhitelistProxy\",repository:\"benny-nottonson/applabWhitelistProxy\",published:!0};function h(t){let e=Object.assign({p:\"p\",code:\"code\",a:\"a\"},t.components);return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:\"applabWhitelistProxy\"}),\" is a Node.js-based proxy server designed to bypass the sandbox restrictions imposed by code.org's AppLab platform. This program allows users to execute code that would normally be blocked by the AppLab sandbox, enabling them to access additional functionalities and extend the capabilities of their projects.\"]}),`\n`,(0,i.jsxs)(e.p,{children:[\"The main concept behind \",(0,i.jsx)(e.code,{children:\"applabWhitelistProxy\"}),\" involves intercepting requests made by the AppLab platform and modifying the responses to bypass the sandbox limitations. The proxy server leverages image manipulation techniques to embed executable code within innocuous-looking images. By manipulating the pixel data of these images, the server can inject additional code that will be executed by the browser running the AppLab environment.\"]}),`\n`,(0,i.jsxs)(e.p,{children:[\"To use \",(0,i.jsx)(e.code,{children:\"applabWhitelistProxy\"}),\", you need to run the Node.js server on a machine accessible from the AppLab environment. Once the server is up and running, you configure the AppLab platform to send its requests through the proxy. When the AppLab platform sends a request for an image, the proxy intercepts it, modifies the response by embedding the necessary additional code, and returns the modified image to the browser.\"]}),`\n`,(0,i.jsxs)(e.p,{children:[\"By breaking the sandbox restrictions of AppLab, \",(0,i.jsx)(e.code,{children:\"applabWhitelistProxy\"}),\" opens up possibilities for executing code that would otherwise be prohibited. This allows users to experiment with advanced functionalities, interact with external APIs, or implement custom features not provided by the original platform.\"]}),`\n`,(0,i.jsxs)(e.p,{children:[\"The \",(0,i.jsx)(e.code,{children:\"applabWhitelistProxy\"}),\" project is hosted on GitHub in the \",(0,i.jsx)(e.a,{href:\"https://github.com/benny-nottonson/applabWhitelistProxy\",children:\"benny-nottonson/applabWhitelistProxy\"}),\" repository. The repository contains the source code and detailed documentation to guide users in setting up and configuring the proxy server. The code is written in Node.js, and it utilizes image manipulation techniques to bypass the AppLab sandbox restrictions.\"]}),`\n`,(0,i.jsxs)(e.p,{children:[\"Please note that while \",(0,i.jsx)(e.code,{children:\"applabWhitelistProxy\"}),\" provides a way to bypass the sandbox limitations, it is essential to use this tool responsibly and ethically. It is crucial to respect the terms and conditions of the platform you are using and not engage in any malicious activities.\"]}),`\n`,(0,i.jsxs)(e.p,{children:[\"By using \",(0,i.jsx)(e.code,{children:\"applabWhitelistProxy\"}),\", developers and educators can explore new possibilities within the AppLab environment, enhance their projects with advanced functionalities, and push the boundaries of what can be achieved using code.org's AppLab platform.\"]})]})}function w(t={}){let{wrapper:e}=t.components||{};return e?(0,i.jsx)(e,Object.assign({},t,{children:(0,i.jsx)(h,t)})):h(t)}var j=w;return f(A);})();\n;return Component;"
  },
  "_id": "projects/appLabWhitelistProxy.mdx",
  "_raw": {
    "sourceFilePath": "projects/appLabWhitelistProxy.mdx",
    "sourceFileName": "appLabWhitelistProxy.mdx",
    "sourceFileDir": "projects",
    "contentType": "mdx",
    "flattenedPath": "projects/appLabWhitelistProxy"
  },
  "type": "Project",
  "path": "/projects/appLabWhitelistProxy",
  "slug": "appLabWhitelistProxy"
}